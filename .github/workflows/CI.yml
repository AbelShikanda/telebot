on: push
name: ðŸš€ Deploy website on push
jobs:
  web-deploy:
    name: ðŸŽ‰ Deploy
    runs-on: ubuntu-latest
    steps:
    # Runs a single command using the runners shell
    - name: Ls
      run: ls -la    
  
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can have access to it
    - name: Git Clone
      uses: actions/checkout@v4
      with:
        ref: 'master'
        
    # Runs a single command using the runners shell
    - name: Ls
      run: ls -la

    # Install composer
    - name: Install composer dependencies
      run: composer install --no-scripts 

    # PHPUnit tests
    - name: PHPUnit tests
      run: php artisan test
    
    # configure php
    - name: Setup PHP Action
      uses: shivammathur/setup-php@2.30.4
      with:
        php-version: '8.3'
        extensions: imagick, swoole, openssl

    # create deploymet archive
    - name: Create deployment archive
      env: 
        GITHUB_SHA: ${{ github.sha }}
      run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules *

    # store artifacts for distribution
    - name: store artifacts for distribution
      uses: actions/upload-artifact@v4
      with:
        name: app-build
        path: ${{ github.sha}}.tar.gz

# Prepairing release on server
  ssh-release:
    name: ssh-release
    runs-on: ubuntu-latest
    needs: [web-deploy]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: app-build
      - name: upload
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_SITES_IP }}
          username: ${{ secrets.FTP_SITES_USER }}
          password: ${{ secrets.FTP_SITES_PASSWORD }}
          port: ${{ secrets.SSH_SITES_PORT }}
          source: ${{ github.sha}}.tar.gz
          target: /home/printsh1/print.printshopeld.com/artifacts
      - name: extract archive and create directory
        uses: appleboy/ssh-action@master
        env: 
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{ secrets.SSH_SITES_IP }}
          username: ${{ secrets.FTP_SITES_USER }}
          password: ${{ secrets.FTP_SITES_PASSWORD }}
          port: ${{ secrets.SSH_SITES_PORT }}
          envs: GITHUB_SHA
          script: |
            mkdir -p "/home/printsh1/print.printshopeld.com/release/${GITHUB_SHA}"
            tar xzf /home/printsh1/print.printshopeld.com/artifacts/${GITHUB_SHA}.tar.gz -C "/home/printsh1/print.printshopeld.com/release/${GITHUB_SHA}"
            rm -rf /home/printsh1/print.printshopeld.com/release/${GITHUB_SHA}/storage
            mkdir -p /home/printsh1/print.printshopeld.com/storage/{app,public,framework,logs}
            mkdir -p /home/printsh1/print.printshopeld.com/storage/framework/{cache,sessions,testing,views}
            mkdir -p /home/printsh1/print.printshopeld.com/storage/framework/cache/data
            chmod -R 0777 /home/printsh1/print.printshopeld.com/storage
# Run befor-hooks
  run-befor-hook:
    name: befor-hook
    runs-on: ubuntu-latest
    needs: [web-deploy, ssh-release]
    steps:
      - name: run-befor-hooks
        uses: appleboy/ssh-action@master
        env: 
          GITHUB_SHA: ${{ github.sha }}
          RELEASE_PATH: /home/printsh1/print.printshopeld.com/release/${{github.sha}}
          ACTIVE_RELEASE_PATH: /home/printsh1/print.printshopeld.com/current
          STORAGE_PATH: /home/printsh1/print.printshopeld.com/storage
          BASE_PATH: /home/printsh1/print.printshopeld.com
        with:
          host: ${{ secrets.SSH_SITES_IP }}
          username: ${{ secrets.FTP_SITES_USER }}
          password: ${{ secrets.FTP_SITES_PASSWORD }}
          port: ${{ secrets.SSH_SITES_PORT }}
          envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,STORAGE_PATH,BASE_PATH
          script: |
            echo "${GITHUB_SHA}"
# Run activate release
  activate-release:
    name: activate-release
    runs-on: ubuntu-latest
    needs: [web-deploy, ssh-release, run-befor-hook]
    steps:
      - name: run-activate-release
        uses: appleboy/ssh-action@master
        env: 
          GITHUB_SHA: ${{ github.sha }}
          RELEASE_PATH: /home/printsh1/print.printshopeld.com/release/${{github.sha}}
          ACTIVE_RELEASE_PATH: /home/printsh1/print.printshopeld.com/current
          STORAGE_PATH: /home/printsh1/print.printshopeld.com/storage
          BASE_PATH: /home/printsh1/print.printshopeld.com
          LARAVEL_ENV: ${{ secrets.LARAVEL_ENV }}
        with:
          host: ${{ secrets.SSH_SITES_IP }}
          username: ${{ secrets.FTP_SITES_USER }}
          password: ${{ secrets.FTP_SITES_PASSWORD }}
          port: ${{ secrets.SSH_SITES_PORT }}
          envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,STORAGE_PATH,BASE_PATH,LARAVEL_ENV
          # in case of trouble recognizing the changes after the link find a solytion to refresh
          script: |
            printf "%s" "$LARAVEL_ENV" > "${BASE_PATH}/.env"
            ln -s -n -f ${BASE_PATH/.env $RELEASE_PATH
            ln -s -n -f $STORAGE_PATH $RELEASE_PATH
            ln -s -n -f $RELEASE_PATH $ACTIVE_RELEASE_PATH
# Run activate release
  run-after-hook:
    name: after-hook
    runs-on: ubuntu-latest
    needs: [web-deploy, ssh-release, run-befor-hook, activate-release]
    steps:
      - name: run-after-hooks
        uses: appleboy/ssh-action@master
        env: 
          GITHUB_SHA: ${{ github.sha }}
          RELEASE_PATH: /home/printsh1/print.printshopeld.com/release/${{github.sha}}
          ACTIVE_RELEASE_PATH: /home/printsh1/print.printshopeld.com/current
          STORAGE_PATH: /home/printsh1/print.printshopeld.com/storage
          BASE_PATH: /home/printsh1/print.printshopeld.com
        with:
          host: ${{ secrets.SSH_SITES_IP }}
          username: ${{ secrets.FTP_SITES_USER }}
          password: ${{ secrets.FTP_SITES_PASSWORD }}
          port: ${{ secrets.SSH_SITES_PORT }}
          envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,STORAGE_PATH,BASE_PATH
          script: |
            echo "${GITHUB_SHA}"
# Run cleanup
  clean-up:
    name: Clean-up
    runs-on: ubuntu-latest
    needs: [web-deploy, ssh-release, run-befor-hook, activate-release, run-after-hook]
    steps:
      - name: run-clean-up
        uses: appleboy/ssh-action@master
        env: 
          RELEASE_PATH: /home/printsh1/print.printshopeld.com/release
          ARTIFACTS_PATH: /home/printsh1/print.printshopeld.com/artifacts
        with:
          host: ${{ secrets.SSH_SITES_IP }}
          username: ${{ secrets.FTP_SITES_USER }}
          password: ${{ secrets.FTP_SITES_PASSWORD }}
          port: ${{ secrets.SSH_SITES_PORT }}
          envs: RELEASE_PATH,ARTIFACTS_PATH
          script: |
            cd $RELEASE_PATH && ls -t -1 | tail -n +6 | xargs rm rf
            cd $ARTIFACTS_PATH && ls -t -1 | tail -n +6 | xargs rm rf